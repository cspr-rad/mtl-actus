@article{Bahr2015CertifiedSM,
  title={Certified symbolic management of financial multi-party contracts},
  author={Patrick Bahr, Jost Berthold, M. Elsman},
  journal={Proceedings of the 20th ACM SIGPLAN International Conference on Functional Programming},
  year={2015},
  url={https://api.semanticscholar.org/CorpusID:7217829}
}
@inproceedings{Breymann2016ModellingAI,
  title={Modelling and identification of financial products : the ACTUS (algorithmic contract types unified standard) approach},
  author={Wolfgang Breymann},
  year={2016},
  url={https://api.semanticscholar.org/CorpusID:170041447}
}
@article{Brammertz2019SmartCD,
  title={Smart Contracts, Distributed Ledgers, and the Need for an Algorithmic Financial Contract Standard},
  author={Willi Brammertz, Allan I. Mendelowitz},
  journal={Banking \& Insurance eJournal},
  year={2019},
  url={https://api.semanticscholar.org/CorpusID:202349457}
}
@inproceedings{Jones2000ComposingCA,
  title={Composing contracts: an adventure in financial engineering (functional pearl)},
  author={Simon L. Peyton Jones, Jean-Marc Eber, Julian Seward},
  booktitle={ACM SIGPLAN International Conference on Functional Programming},
  year={2000},
  url={https://api.semanticscholar.org/CorpusID:1804150}
}
@inproceedings{Nuzzo2014InterfaceT,
  author={Nuzzo, Pierluigi and Iannopollo, Antonio and Tripakis, Stavros and Sangiovanni-Vincentelli, Alberto},
  booktitle={2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE)},
  title={Are interface theories equivalent to contract theories?},
  year={2014},
  volume={},
  number={},
  pages={104-113},
  keywords={Contracts;Law;Cost accounting;Automata;Abstracts;Mathematical model},
  doi={10.1109/MEMCOD.2014.6961848}
}
@inproceedings{Maler2006FromMT,
  title={From MITL to Timed Automata},
  author={Oded Maler and D. Ni{\vc}kovi{\'c} and Amir Pnueli},
  booktitle={International Conference on Formal Modeling and Analysis of Timed Systems},
  year={2006},
  url={https://api.semanticscholar.org/CorpusID:1495432}
}
@ARTICLE{Halbwachs1992Lustre,
  author={Halbwachs, N. and Lagnier, F. and Ratel, C.},
  journal={IEEE Transactions on Software Engineering},
  title={Programming and verifying real-time systems by means of the synchronous data-flow language LUSTRE},
  year={1992},
  volume={18},
  number={9},
  pages={785-793},
  keywords={Real time systems;Differential equations;Design methodology;Formal verification;Computer languages;Difference equations;Switches;Software quality;Application software;Finite difference methods},
  doi={10.1109/32.159839}
}
@InProceedings{Champion2016Kind2,
  author="Champion, Adrien
    and Mebsout, Alain
    and Sticksel, Christoph
    and Tinelli, Cesare",
  editor="Chaudhuri, Swarat
    and Farzan, Azadeh",
  title="The Kind 2 Model Checker",
  booktitle="Computer Aided Verification",
  year="2016",
  publisher="Springer International Publishing",
  address="Cham",
  pages="510--517",
  abstract="Kind 2 is an open-source, multi-engine, SMT-based model checker for safety properties of finite- and infinite-state synchronous reactive systems. It takes as input models written in an extension of the Lustre language that allows the specification of assume-guarantee-style contracts for system components. Kind 2 was implemented from scratch based on techniques used by its predecessor, the PKind model checker. This paper discusses a number of improvements over PKind in terms of invariant generation. It also introduces two main features: contract-based compositional reasoning and certificate generation.",
  isbn="978-3-319-41540-6"
}
@INPROCEEDINGS{Girard2022AssumeGuaranteeInvariant,
  author={Girard, Antoine and Iovine, Alessio and Benberkane, Sofiane},
  booktitle={2022 IEEE 61st Conference on Decision and Control (CDC)},
  title={Invariant Sets for Assume-Guarantee Contracts},
  year={2022},
  volume={},
  number={},
  pages={2190-2195},
  keywords={Semantics;Power systems;Behavioral sciences;Dynamical systems;Contracts;Robots;Certification},
  doi={10.1109/CDC51059.2022.9993344}
}

@article{Saoud2021AssumeGuaranteeContinuous,
  title = {Assume-guarantee contracts for continuous-time systems},
  journal = {Automatica},
  volume = {134},
  pages = {109910},
  year = {2021},
  issn = {0005-1098},
  doi = {https://doi.org/10.1016/j.automatica.2021.109910},
  url = {https://www.sciencedirect.com/science/article/pii/S0005109821004337},
  author = {Adnane Saoud and Antoine Girard and Laurent Fribourg},
  keywords = {Component-based design, Assume-guarantee contracts, Prefix-closed properties, Small-gain theorem},
  abstract = {Many techniques for verifying properties of continuous-time systems are limited to systems of moderate size. In this paper, we propose an approach based on assume-guarantee contracts and compositional reasoning for verifying properties of a broad class of continuous-time systems consisting of interconnected components. The notion of assume-guarantee contracts makes it possible to divide responsibilities among the system components: a contract specifies the property that a component must fulfill under some assumptions on the behavior of its environment (i.e. of the other components). We define weak and strong semantics of assume-guarantee contracts. We then establish a certain number of results for compositional reasoning, which allow us to show that a global assume-guarantee contract of the whole system is satisfied when all components satisfy their own contracts. We show that the weak satisfaction of the contract is sufficient to deal with interconnections described by a directed acyclic graph, while strong satisfaction is needed to reason about general interconnections containing cycles. Specific results for systems described by differential inclusions and invariance assume-guarantee contracts are then developed. Finally, we show how the proposed assume-guarantee framework can recast different versions of the small-gain theorem as a particular case. Throughout the paper, the main results are illustrated using simple examples.}
}
